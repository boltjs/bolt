chain
=====

The `ui.chain` modules are used to sequence several user interface actions together. At each stage, the information presented to the user might be dependent upon the previous stage. A chain consists of a sequence of pipes presented by a view window. The supported pipe types are:


* **EnumPipe**: this allows a user to choose between a set of options

* **TextPipe**: this allows a user to type in their desired value

* **FinishPipe**: there should be **one and only one** FinishPipe in a chain. It must be at the end.


As the user progresses through the chain, their input is recorded in an array of values. These values can be processed by each pipe, allowing it to present particular information based on previous user responses. The constructors for the Pipes are shown below.

EnumPipe
--------

    EnumPipe(options: [String])

* **options**: is a list of strings representing the set of values from which to choose. An EnumPipe does not consider any previous responses in the chain.

Example:

    fruit = EnumPipe(['orange', 'apple', 'pear'])


TextPipe
--------

    TextPipe(label: String, initial: ([String], String) -> String)

* **label**: is the text label for the user input
* **initial**: is a function which takes in two arguments and returns the value to use for the `initial` text. Its arguments are:
  * the list of values received so far
  * the last value in the above list

Example:

    fruit = TextPipe('Fruit', lambda x, y: y + ' again?')


FinishPipe
----------

    FinishPipe(done: (String, String, ...) -> IO ())

 * **done**: is the function to invoke at the end of the chain. The number of arguments **must** equal the number of previous pipes in the chain. The function can do anything.


Chaining
---------

A chain is triggered by supplying a window (for the UI components) and the list of pipes. Example:

    def done(language, rationale):
        print('You like ' + language + ' because of ' + rationale + '. Interesting.')

    chain.go(view.window(), [
        EnumPipe(['python', 'scheme']),
        TextPipe('Rationale: ', lambda x, y: 'Why do you like ' + y + '?'),
        FinishPipe(lambda x, y: done)
    ])
